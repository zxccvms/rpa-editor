{"version":3,"file":"main.js","mappings":"UAGA,EAAQA,EAAKC,EACPC,EAEAC,E,wBCNNC,EAAOC,QAAUC,QAAQ,W,sBCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,CHnBA,EAA+BC,EAAQ,KAA/BN,EAAR,EAAQA,IAAKC,EAAb,EAAaA,cACPC,EAAOI,EAAQ,IAEfH,EAAe,WAEA,IAAIF,EAAc,CACnCY,MAAO,IACPC,OAAQ,IACRC,eAAgB,CACdC,QAASd,EAAKe,KAAKC,UAAW,iBAKvBC,SAAS,aAIrB,EAKDnB,EAAIoB,YAAYC,MAAK,WACnBlB,IAEAH,EAAIsB,GAAG,YAAY,WAG4B,IAAzCrB,EAAcsB,gBAAgBC,QAAcrB,GACjD,GACF,IAKDH,EAAIsB,GAAG,qBAAqB,WACD,WAArBG,QAAQC,UAAuB1B,EAAI2B,MACxC,G","sources":["webpack://rpa-editor/./src/main/index.ts","webpack://rpa-editor/external node-commonjs \"electron\"","webpack://rpa-editor/external node-commonjs \"path\"","webpack://rpa-editor/webpack/bootstrap"],"sourcesContent":["// main.js\r\n\r\n// Modules to control application life and create native browser window\r\nconst { app, BrowserWindow } = require(\"electron\")\r\nconst path = require(\"path\")\r\n\r\nconst createWindow = () => {\r\n  // Create the browser window.\r\n  const mainWindow = new BrowserWindow({\r\n    width: 800,\r\n    height: 600,\r\n    webPreferences: {\r\n      preload: path.join(__dirname, \"preload.js\")\r\n    }\r\n  })\r\n\r\n  // 加载 index.html\r\n  mainWindow.loadFile(\"index.html\")\r\n\r\n  // 打开开发工具\r\n  // mainWindow.webContents.openDevTools()\r\n}\r\n\r\n// 这段程序将会在 Electron 结束初始化\r\n// 和创建浏览器窗口的时候调用\r\n// 部分 API 在 ready 事件触发后才能使用。\r\napp.whenReady().then(() => {\r\n  createWindow()\r\n\r\n  app.on(\"activate\", () => {\r\n    // On macOS it's common to re-create a window in the app when the\r\n    // dock icon is clicked and there are no other windows open.\r\n    if (BrowserWindow.getAllWindows().length === 0) createWindow()\r\n  })\r\n})\r\n\r\n// 除了 macOS 外，当所有窗口都被关闭的时候退出程序。 There, it's common\r\n// for applications and their menu bar to stay active until the user quits\r\n// explicitly with Cmd + Q.\r\napp.on(\"window-all-closed\", () => {\r\n  if (process.platform !== \"darwin\") app.quit()\r\n})\r\n\r\n// In this file you can include the rest of your app's specific main process\r\n// code. 也可以拆分成几个文件，然后用 require 导入。\r\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n"],"names":["app","BrowserWindow","path","createWindow","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","width","height","webPreferences","preload","join","__dirname","loadFile","whenReady","then","on","getAllWindows","length","process","platform","quit"],"sourceRoot":""}